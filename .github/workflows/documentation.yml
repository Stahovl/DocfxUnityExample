name: Build and Deploy Documentation

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Install DocFX
        run: choco install -y docfx

      - name: Install wkhtmltopdf
        run: choco install -y wkhtmltopdf

      - name: Use README.md as index.md
        run: copy README.md Documentation\index.md
        shell: cmd

      - name: Generate Metadata
        run: |
          cd Documentation
          if exist obj rmdir /s /q obj
          docfx metadata
        shell: cmd

      - name: Build Documentation
        run: |
          cd Documentation
          docfx build
        shell: cmd

      - name: Create PDF directory
        run: New-Item -ItemType Directory -Force -Path Documentation\_site\_pdf
        shell: powershell

      - name: Start Python Server
        run: |
          cd Documentation/_site
          Start-Process python -ArgumentList "-m", "http.server", "8000" -NoNewWindow
          Start-Sleep -Seconds 10
        shell: powershell

      - name: Generate PDFs
        run: |
          cd Documentation/_site
          
          wkhtmltopdf --enable-local-file-access `
                     --print-media-type `
                     --javascript-delay 5000 `
                     --no-stop-slow-scripts `
                     --debug-javascript `
                     --load-error-handling ignore `
                     --load-media-error-handling ignore `
                     http://localhost:8000/api/index.html "_pdf/Documentation_api.pdf"
          
          wkhtmltopdf --enable-local-file-access `
                     --print-media-type `
                     --javascript-delay 5000 `
                     --no-stop-slow-scripts `
                     --debug-javascript `
                     --load-error-handling ignore `
                     --load-media-error-handling ignore `
                     http://localhost:8000/index.html "_pdf/Documentation.pdf"
        shell: powershell

      - name: Create .nojekyll file
        run: type nul > Documentation/_site/.nojekyll
        shell: cmd

      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: Documentation/_site

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation_pdfs
          path: Documentation/_site/_pdf

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation_pdfs
          path: _site/_pdf

      - name: Create .nojekyll file
        run: touch _site/.nojekyll

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
